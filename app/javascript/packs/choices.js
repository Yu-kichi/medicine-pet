import * as Choices from 'choices.js'

// document.addEventListener('turbolinks:load', function () {
//   new Choices('.choices-remove-button', {
//     removeItemButton: true,
//     searchPlaceholderValue: "検索したい名前を入力してください",
//     itemSelectText: '選択してください',
//     searchResultLimit: 10,
//     noResultsText: "見つかりません",
//     renderChoiceLimit: 10,
//   });
// });


//できたけどむしろ遅い。。
// document.addEventListener('turbolinks:load', function () {
//   var singleXhrRemove = new Choices('.choices-remove-button', {
//     removeItemButton: true,
//     searchPlaceholderValue: "病院名を検索できます",
//   }).setChoices(function(callback) {
//     //childrenPath = $(@).find('option:selected').data().childrenPath
//     //$selectChildren = $(@).closest('form').find('.select-children')
//     return fetch(
//       `/api/clinics`
//     )
//       .then(function(res) {
//         return res.json();
//       })
//       .then(function(data) {
//         return data.clinics.map(function(clinic) {
//           return { label: clinic.name, value: clinic.name };
//         });
//       });
//   });
// });


// $(function() {
//   return (function() {
//     var replaceChildrenOptions, replaceSelectOptions;
//     replaceSelectOptions = function($select, results) {
//       $select.html($('<option>'));
//       return $.each(results, function() {
//         var option;
//         option = $('<option>').val(this.id).text(this.name);
//         return $select.append(option);
//       });
//     };
//     replaceChildrenOptions = function() {
//       var $selectChildren, childrenPath;
//       childrenPath = $(this).find('option:selected').data().childrenPath;
//       $selectChildren = $(this).closest('form').find('.select-children');
//       if (childrenPath != null) {
//         return $.ajax({
//           url: childrenPath,
//           dataType: "json",
//           success: function(results) {
//             return replaceSelectOptions($selectChildren, results);
//           },
//           error: function(XMLHttpRequest, textStatus, errorThrown) {
//             console.error("Error occurred in replaceChildrenOptions");
//             console.log("XMLHttpRequest: " + XMLHttpRequest.status);
//             console.log("textStatus: " + textStatus);
//             return console.log("errorThrown: " + errorThrown);
//           }
//         });
//       } else {
//         return replaceSelectOptions($selectChildren, []);
//       }
//     };
//     return $('.select-parent').on({
//       'change': replaceChildrenOptions
//     });
//   })();
// });

// // ---
// // generated by coffee-script 1.9.2